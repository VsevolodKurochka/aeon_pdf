/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
body,html{height:100%}html{-webkit-text-size-adjust:100%;box-sizing:border-box;line-height:1.15}body,sub,sup{position:relative}body{margin:0;background-color:#fff;font-family:"Montserrat",sans-serif;color:#000;font-weight:400;line-height:1.2;font-size:16px}h1{font-size:2em}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;text-decoration:none}abbr[title]{border-bottom:none;text-decoration:underline dotted}b{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%;height:auto}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*,:after,:before{box-sizing:border-box}h1,h2,h3,p{margin:0}.bold,h1,h2,h3,strong{font-weight:700}.brand{color:#2ebce9}.uppercase{text-transform:uppercase}.main-area{display:block;position:relative;width:764px;height:1123px;background-color:#fff;box-shadow:0 0 25px 0 #747b74;margin:50px auto;padding:60px 60px 160px;font-size:11px;min-height:100%}.main-area__favorite{color:#2ebce9;font-weight:700;margin-bottom:10px}.main-area__category{font-size:11px;font-weight:600;margin-bottom:5px;text-transform:uppercase}.main-area__price{font-size:19px;font-weight:700;margin-bottom:15px}.main-area__title{font-size:19px;font-weight:600;margin-bottom:10px}.main-area__description{font-size:11px}.main-area__description p:not(:last-child){margin-bottom:15px}.main-area__content{margin-bottom:20px}.main-area__plan-image{margin-top:20px;display:block;width:100%}.main-area__group{font-size:0;height:100%;padding-bottom:120px}.main-area__group-image{display:block;height:33.33333%}.main-area__group-image:not(:last-child){margin-bottom:10px}.main-area__header{display:flex;justify-content:space-between;align-items:center;margin-bottom:30px}.main-area__header-logo{height:26px}.main-area__header-count-total{color:#2ebce9}.main-area__header-count-divider{margin-left:2px;margin-right:2px}.main-area__content-list{margin-top:20px;margin-bottom:0;list-style:none;padding-left:0;display:flex;flex-wrap:wrap;align-items:center;font-size:9px}.main-area__content-list-item:not(:last-child){margin-right:30px}.main-area__content-list-count{display:flex;align-items:center}.main-area__content-list-count-count{width:20px;height:20px;display:inline-flex;justify-content:center;align-items:center;border:1px solid #000;color:#000;border-radius:100%;font-size:12px;font-weight:700;text-align:center;outline:0;background-color:transparent;margin-right:5px}.main-area__content-list-count-text{text-transform:uppercase}.main-area__content-list-checked{position:relative}.main-area__content-list-checked-text{display:inline-block;vertical-align:middle;padding-left:25px;margin-bottom:0;text-align:left;text-transform:uppercase}.main-area__content-list-checked-indicator{position:absolute;top:50%;left:0;width:13px;height:13px;transition:all .3s ease;transform:translateY(-50%);border:1px solid #7d7d7d}.main-area__content-list-checked-indicator:before{position:absolute;top:-6px;left:6px;transition:all .3s ease;width:6px;height:14px;content:"";border-color:#2ebce9;border-style:solid;border-width:0 3px 3px 0;transform:rotate(45deg) scale(1)}.main-area__footer{display:block;position:absolute;left:0;bottom:45px;width:100%;padding-left:60px}.main-area__footer-title{font-weight:600;font-size:9px;text-transform:uppercase;margin-bottom:5px}.main-area__footer-list{display:flex;align-items:center;margin-top:0;margin-bottom:15px;padding-left:0;list-style:none;font-size:11px}.main-area__footer-list li{margin-right:15px}@media print{.main-area{box-shadow:none;padding:0;margin:0}.main-area__footer{padding-left:0}.main-area__group-image{height:27%}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
